Game Manager - creates new hoods (but I have "HoodManager" :( )
SubStationCreator - creates the Influance Area

Well, that's what I got from 15 minutes looking at some classes:

    You have no interfaces in your code - not so good. This suggests coupling of classes to each other (interfaces help you avoid it)

     Remove all hardcoded names and place as consts somewhere:
    (PlayerPrefs.HasKey("Music"))
    EventManager.TriggerEvent("InfluenecePositioned")
     highscore = PlayerPrefs.HasKey("Highscore") ? PlayerPrefs.GetInt("Highscore") : 0;
     PlayerPrefs.SetInt("Music", musicIsOn ? 1 : 0);
    etc....

    All your event system is taken from Unity tutorial. I used exactly this system in my Jelly button exam and they didn't like it. Told me to use Events and use the += to register methods to events. eventDictionary is very bad since you're adding/ using "hard coded" names of events inside it while when you're using events you registering the actual method.

    private members' name should start with an underscore

    hoodManager - coupling problem. Make an abstract class /interface (abstractHoodManager) and make hoodManager inherite from it. Then, in GameManager your local field should be of the abstract/ interface type. that way, you can replace the hoodManager with another one easily without breaking things in GameManager

    Transfer all music code to MusicManager. Create interface IMusicManager and use this as the type in your GameManager.

    House Controller is deeply coupled into GameManager- I dont like this...it should fire events and GameManager should catch them.